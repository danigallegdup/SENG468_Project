version: "3.9"

services:
  clean-mongo:
    build:
      context: ./backend/config
    container_name: clean-mongo
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  front-end:
    build:
      context: ./day-trading-app
    container_name: front-end
    ports:
      - "3000:3000"
    networks:
      - backend-network
  
  auth-service-1:
    build:
      context: ./backend/auth
    container_name: auth-service-1
    ports:
      - "30011:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  auth-service-2:
    build:
      context: ./backend/auth
    container_name: auth-service-2
    ports:
      - "30012:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
  
  auth-service-3:
    build:
      context: ./backend/auth
    container_name: auth-service-3
    ports:
      - "30013:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  auth-service-4:
    build:
      context: ./backend/auth
    container_name: auth-service-4
    ports:
      - "30014:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
  
  auth-service-5:
    build:
      context: ./backend/auth
    container_name: auth-service-5
    ports:
      - "30015:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  transaction-service-1:
    build:
      context: ./backend/transaction
    container_name: transaction-service-1
    ports:
      - "30041:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  transaction-service-2:
    build:
      context: ./backend/transaction
    container_name: transaction-service-2
    ports:
      - "30042:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
  
  transaction-service-3:
    build:
      context: ./backend/transaction
    container_name: transaction-service-3
    ports:
      - "30043:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  transaction-service-4:
    build:
      context: ./backend/transaction
    container_name: transaction-service-4
    ports:
      - "30044:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
  
  transaction-service-5:
    build:
      context: ./backend/transaction
    container_name: transaction-service-5
    ports:
      - "30045:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  order-service-1:
    build:
      context: ./backend/order
    container_name: order-service-1
    ports:
      - "30021:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
    networks:
      - backend-network

  order-service-2:
    build:
      context: ./backend/order
    container_name: order-service-2
    ports:
      - "30022:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
    networks:
      - backend-network

  order-service-3:
    build:
      context: ./backend/order
    container_name: order-service-3
    ports:
      - "30023:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
    networks:
      - backend-network
  
  order-service-4:
    build:
      context: ./backend/order
    container_name: order-service-4
    ports:
      - "30024:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
      
    networks:
      - backend-network

  order-service-5:
    build:
      context: ./backend/order
    container_name: order-service-5
    ports:
      - "30025:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
    networks:
      - backend-network

  usermanagement-service-1:
    build:
      context: ./backend/userManagement
    container_name: usermanagement-service-1
    ports:
      - "30031:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  usermanagement-service-2:
    build:
      context: ./backend/userManagement
    container_name: usermanagement-service-2
    ports:
      - "30032:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
      
  usermanagement-service-3:
    build:
      context: ./backend/userManagement
    container_name: usermanagement-service-3
    ports:
      - "30033:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  usermanagement-service-4:
    build:
      context: ./backend/userManagement
    container_name: usermanagement-service-4
    ports:
      - "30034:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network
  
  usermanagement-service-5:
    build:
      context: ./backend/userManagement
    container_name: usermanagement-service-5
    ports:
      - "30035:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - "8080:8080"  # API Gateway is exposed on port 8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service-1
      - auth-service-2
      - auth-service-3
      - auth-service-4
      - auth-service-5
      - transaction-service-1
      - transaction-service-2
      - transaction-service-3
      - transaction-service-4
      - transaction-service-5
      - order-service-1
      - order-service-2
      - order-service-3
      - order-service-4
      - order-service-5
      - usermanagement-service-1
      - usermanagement-service-2
      - usermanagement-service-3
      - usermanagement-service-4
      - usermanagement-service-5
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
